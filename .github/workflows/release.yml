name: Build and Release Gio App

on:
  push:
    tags:
      - 'v*'  # Trigger workflow on version tags like v1.0.0, v2.1.5, etc.
  workflow_dispatch:  # Manual Trigger should make DRAFT release

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y libwayland-dev libx11-dev libxkbcommon-dev \
                              libgles2-mesa-dev libegl1-mesa-dev libxcursor-dev\
                              libvulkan-dev libasound2-dev libxkbcommon-x11-dev \
                              libx11-xcb-dev

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build for Linux
        run: GOOS=linux GOARCH=amd64 go build -o quickClip-linux

      - name: Archive Linux binary
        run: tar -czvf quickClip-linux.tar.gz quickClip-linux

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: quickClip-linux
          path: quickClip-linux.tar.gz

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      
      - name: Install `gogio`
        run: go install gioui.org/cmd/gogio@latest

      - name: Build for Windows
        run: gogio -target=windows -buildmode=exe -icon="icon/icon.png" -arch=amd64 -o quickClip-windows.exe .

      - name: Archive Windows binary
        run: powershell Compress-Archive -Path quickClip-windows.exe -DestinationPath quickClip-windows.zip

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: quickClip-windows
          path: quickClip-windows.zip

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed to create a release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Linux binary
        uses: actions/download-artifact@v4
        with:
          name: quickClip-linux
          path: .

      - name: Download Windows binary
        uses: actions/download-artifact@v4
        with:
          name: quickClip-windows
          path: .

      - name: Set release metadata
        id: release_info
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            TAG_NAME="${GITHUB_REF##*/}"
            RELEASE_NAME="$TAG_NAME"
            DRAFT=false
            PRERELEASE=false
          else
            TAG_NAME=""
            SHORT_SHA=$(git rev-parse --short HEAD)
            RELEASE_NAME="Commit $SHORT_SHA"
            DRAFT=true
            PRERELEASE=true
          fi

          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "name=$RELEASE_NAME" >> $GITHUB_OUTPUT
          echo "draft=$DRAFT" >> $GITHUB_OUTPUT
          echo "prerelease=$PRERELEASE" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: ${{ steps.release_info.outputs.draft }}
          prerelease: ${{ steps.release_info.outputs.prerelease }}
          files: |
            quickClip-linux.tar.gz
            quickClip-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
